删除远程分支: git push origin --delete [branchname] 
提交分支到远程分支: git push origin branch:branch
通过git stash将工作区恢复到上次提交的内容，同时备份本地所做的修改，之后就可以正常git pull了，git pull完成后，执行git stash pop将之前本地做的修改应用到当前工作区。
git stash
git pull
git stash pop


把本地tag推送到远程
git push --tags

获取远程tag
git fetch origin tag <tagname>

2.查看标签
查看本地某个 tag 的详细信息：

git show <tagName>

查看本地所有 tag：

git tag 或者 git tag -l

查看远程所有 tag：

git ls-remote --tags origin

3.删除标签
本地 tag 的删除：

git tag -d <tagName>

远程 tag 的删除：

git push origin :<tagName>

4.检出标签
git checkout -b <branchName> <tagName>



5. git  删除后紧急操作
查看提交日志 ：  git log   

回退某次版本   git reset --hard XXX   (XXXX  对应的指针)


--------------

mongod.exe --config "C:\Program Files\MongoDB\Server\4.0\mongod.cfg" --install    //  添加到本地电脑服务 
  
mongod --dbpath  "C:\Program Files\MongoDB\Server\4.0\data\db"   
mongod --logpath "C:\Program Files\MongoDB\log\mongo.log" --logappend --dbpath "C:\Program Files\MongoDB\data\db" --directoryperdb --serviceName "MongoDB" --serviceDisplayName "MongoDB" --remove 

――――――――――――――――

mongod --logpath "C:\Program Files\MongoDB\log\mongo.log" --logappend --dbpath "C:\Program Files\MongoDB\data\db" --directoryperdb --serviceName "MongoDB" --serviceDisplayName "MongoDB" --install

――――――――――――――――
分支相关命令
 git branch                  查看本地分支； 
 git branch -r              查看远程分支； 
 git branch -a                     查看本地和远程分支； 
 git branch -d branchName              删除本地分支； 
 git branch -d -r branchName                删除远程分支； 
 git branch -D branchName                   强制删除branchName分支； 
 git branch -v                      查看本地分支信息； 
 git branch -vv                      查看更多本地分支信息； 
 git branch -av                     查看所有分支信息； 
 git branch -m oldbranch newbranch                      重命名分支； 
 git branch -M oldbranch newbranch                     强制重命名分支（如果newbranch分支已存在，那么采用-M强制重命名为newbranch）

git push -u origin dev         (远程分支名)，  首次提交分支 
――――――――――――――――
git checkout -- *    撤销上次提交后的所有修改



------



